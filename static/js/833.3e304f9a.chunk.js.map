{"version":3,"file":"static/js/833.3e304f9a.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","modules/BookContacts/ContactsItem/ContactsItem.jsx","modules/BookContacts/ContactsList/ContactsList.jsx","modules/BookContacts/FormNewContact/fields.js","modules/BookContacts/FormNewContact/initialState.js","modules/BookContacts/FormNewContact/FormNewContact.jsx","modules/BookContacts/SearchContact/SearchContact.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/Textfield.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = (store) => {\n  return store.contacts;\n};\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport SmallButton from 'shared/components/SmallButton';\n\nconst ContactsItem = ({ id, name, number, onClick }) => {\n  // console.log(phone);\n  return (\n    <li>\n      {name}: {number}\n      <SmallButton\n        text=\"Delete\"\n        type=\"button\"\n        onClick={(e) => {\n          onClick(id);\n        }} />\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactsItem);\n","import ContactsItem from '../ContactsItem/ContactsItem';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nconst ContactsList = ({ items, onClick }) => {\n  const elements = items.map((el) => {\n    const { number, name, id } = el;\n    return (\n      <ContactsItem\n        key={id}\n        id={id}\n        onClick={onClick}\n        number={number}\n        name={name}\n      />\n    );\n  });\n  return <ul>{elements}</ul>;\n}\nContactsList.defaultProps = {\n  items: [],\n};\n\nContactsList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default memo(ContactsList);","export const fields = {\n  name: {\n    label: \"Name\",\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    placeholder: \"enter name\",\n  },\n  number: {\n    label: \"Number\",\n    type: \"tel\",\n    name: \"number\",\n    title:\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n    required: true,\n    placeholder: \"enter number\",\n  },\n};\n","export const initialState = {\n    name: '',\n    number: '',\n}","import { memo } from 'react';\nimport PropTypes from \"prop-types\";\nimport TextField from 'shared/components/TextField';\nimport useForm from 'shared/hooks/useForm';\nimport { fields } from './fields';\nimport { initialState } from \"./initialState\";\nimport SmallButton from 'shared/components/SmallButton';\n\n\nconst FormNewContact = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <TextField value={name} onChange={handleChange} {...fields.name} />\n      <TextField value={number} onChange={handleChange} {...fields.number} />\n      <SmallButton type=\"submit\" text=\"Add contact\" />\n    </form>\n  );\n};\n\nFormNewContact.defaultProps = {\n  onSubmit: () => { },\n};\n\n\nFormNewContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(FormNewContact);","\nimport { memo } from 'react';\nimport PropTypes from \"prop-types\";\n\nconst SearchContact = ({ onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        onChange={onChange}\n        placeholder=\"enter name\"\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nSearchContact.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default memo(SearchContact);\n","import { useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport {\n    fetchContacts,\n    removeContact,\n    addContact,\n} from \"../../redux/contacts/contacts-operation\";\nimport { getContacts } from \"../../redux/contacts/contacts-selector\";\nimport { useDispatch } from \"react-redux\";\n\nimport ContactsList from \"../../modules/BookContacts/ContactsList/ContactsList\";\nimport FormNewContact from \"../../modules/BookContacts/FormNewContact/FormNewContact\";\nimport SearchContact from \"../../modules/BookContacts/SearchContact/SearchContact\";\n\n// import \"./index.css\";\n\nconst ContactsPage = () => {\n    const [filter, setFilter] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const contactsStore = useSelector(getContacts);\n    const { items, error, loading } = contactsStore;\n    const filteredItems = () => {\n        if (!filter) {\n            return items;\n        }\n        const newItems = items.filter((e) => {\n            const { name } = e;\n            return name.toLowerCase().includes(filter.toLowerCase());\n        });\n        return newItems;\n    };\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const onAddContact = useCallback(\n        (obj) => dispatch(addContact(obj)),\n        [dispatch]\n    );\n\n    const onRemoveContact = useCallback(\n        (id) => {\n            dispatch(removeContact(id));\n        },\n        [dispatch]\n    );\n\n    const changeFilterState = useCallback(\n        ({ target: { value } }) => setFilter(value.trim()),\n        [setFilter]\n    );\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Phonebook</h1>\n            <FormNewContact onSubmit={onAddContact} />\n\n            <h2 className=\"title\">Contacts</h2>\n            <SearchContact onChange={changeFilterState} />\n            {loading && <p>Loading...</p>}\n            {error && <p>{`Error: ${error}`}</p>}\n            {items.length > 0 && !error && !loading && (\n                <ContactsList items={filteredItems()} onClick={onRemoveContact} />\n            )}\n        </div>\n    );\n};\n\nexport default ContactsPage;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"text-field_block__JkCnA\",\"label\":\"text-field_label__VYX-y\",\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({ label, name, value, onChange, placeholder, required, type }) => {\n    const id = useMemo(() => nanoid(), []);//при первом рендере будет создана айди юсмемо что бы каждый раз не пересоздавалась фция \n\n    return (\n        <div className={styles.block}>\n            {label && <label className={styles.label} htmlFor={id}>{label}: </label>}\n            <input className={styles.input} id={id} name={name} value={value}\n                onChange={onChange} placeholder={placeholder} required={required} type={type} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst useForm = ({onSubmit, initialState, isReset = true}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        if(isReset) {\n            setState({...initialState})\n        }\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n}\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","store","contacts","ContactsItem","id","name","number","onClick","SmallButton","text","type","e","memo","ContactsList","items","elements","map","el","defaultProps","fields","label","pattern","title","required","placeholder","initialState","FormNewContact","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","onChange","SearchContact","useState","filter","setFilter","dispatch","useDispatch","contactsStore","useSelector","error","loading","useEffect","fetchContacts","onAddContact","useCallback","obj","addContact","onRemoveContact","removeContact","changeFilterState","target","trim","className","length","toLowerCase","includes","useMemo","nanoid","styles","htmlFor","isReset","setState","checked","newValue","prevState","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}