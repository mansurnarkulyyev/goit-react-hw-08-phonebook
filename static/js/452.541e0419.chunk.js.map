{"version":3,"file":"static/js/452.541e0419.chunk.js","mappings":"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","sources":["modules/LoginForm/initialState.js","modules/LoginForm/fields.js","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/Textfield.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const initialState = {\n    email: \"\",\n    password: \"\"\n}","export const fields = {\n    email: {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Type your email\",\n        required: true,\n    },\n    password: {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Type your password\",\n        required: true,\n    },\n}","import useForm from \"../../shared/hooks/useForm\";\nimport PropTypes from \"prop-types\";\n\nimport TextField from \"../../shared/components/TextField\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\nimport Button from \"shared/components/Button\";\n\nconst LoginForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ onSubmit, initialState });\n\n    const { email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField value={email} onChange={handleChange} {...fields.email} />\n            <TextField value={password} onChange={handleChange} {...fields.password} />\n            <Button text=\"Login\" type=\"submit\">Login</Button>\n        </form>\n    )\n}\n\nLoginForm.defaultProps = {\n    onSubmit: () => { },\n};\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;","import { useDispatch } from \"react-redux\";\nimport React from 'react';\n\nimport { loginRequest } from '../../redux/auth/auth-operation.js';\n\nimport LoginForm from \"../../modules/LoginForm/LoginForm\";\nimport useIsLogin from \"shared/hooks/useLogin.js\";\nimport { Navigate } from \"react-router-dom\";\n// import { isLogin } from \"redux/auth/auth-selector.js\";\n\nconst LoginPage = () => {\n    const isLogin = useIsLogin()\n\n    const dispatch = useDispatch();\n\n    const onLogin = (data) => {\n        // console.log(data);\n        dispatch(loginRequest(data));\n    }\n\n    if (isLogin) {\n        <Navigate to={\"/contacts\"} />\n    }\n\n    return (\n        <main>\n            <div className=\"container\">\n                <h2>Login Page</h2>\n                <LoginForm onSubmit={onLogin} />\n            </div>\n        </main>\n    )\n}\n\nexport default LoginPage;\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"text-field_block__JkCnA\",\"label\":\"text-field_label__VYX-y\",\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from \"react\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({ label, name, value, onChange, placeholder, required, type }) => {\n    const id = useMemo(() => nanoid(), []);//при первом рендере будет создана айди юсмемо что бы каждый раз не пересоздавалась фция \n\n    return (\n        <div className={styles.block}>\n            {label && <label className={styles.label} htmlFor={id}>{label}: </label>}\n            <input className={styles.input} id={id} name={name} value={value}\n                onChange={onChange} placeholder={placeholder} required={required} type={type} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst useForm = ({onSubmit, initialState, isReset = true}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        if(isReset) {\n            setState({...initialState})\n        }\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n}\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["initialState","email","password","fields","label","name","type","placeholder","required","LoginForm","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","onChange","Button","text","defaultProps","isLogin","useIsLogin","dispatch","useDispatch","className","data","loginRequest","id","useMemo","nanoid","styles","htmlFor","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}