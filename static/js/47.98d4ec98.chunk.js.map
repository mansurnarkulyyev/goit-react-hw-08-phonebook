{"version":3,"file":"static/js/47.98d4ec98.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","modules/ContactsItem/ContactsItem.jsx","modules/ContactsList/ContactsList.jsx","modules/FormNewContact/FormNewContact.jsx","modules/SearchContact/SearchContact.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = (store) => {\n  return store.contacts;\n};\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nconst ContactsItem = ({ id, name, phone, onClick }) => {\n  // console.log(phone);\n  return (\n    <li>\n      {name}: {phone}\n      <button onClick={() => onClick(id)} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactsItem);\n","import ContactsItem from '../ContactsItem/ContactsItem';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nconst ContactsList = ({ items, onClick }) => {\n  const elements = items.map((el) => {\n    const { phone, name, id } = el;\n    return (\n      <ContactsItem\n        key={id}\n        id={id}\n        onClick={onClick}\n        phone={phone}\n        name={name}\n      />\n    );\n  });\n  return <ul>{elements}</ul>;\n}\nContactsList.defaultProps = {\n  items: [],\n};\n\nContactsList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      phone: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default memo(ContactsList);","import { useState, memo } from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport function FormNewContact({ onSubmit, initialState }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\n\nFormNewContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(FormNewContact);","\nimport { memo } from 'react';\nimport PropTypes from \"prop-types\";\n\nconst SearchContact = ({ onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        onChange={onChange}\n        placeholder=\"enter name\"\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nSearchContact.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default memo(SearchContact);\n","import { useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport {\n    fetchContacts,\n    removeContact,\n    addContact,\n} from \"../../redux/contacts/contacts-operation\";\nimport { getContacts } from \"../../redux/contacts/contacts-selector\";\nimport { useDispatch } from \"react-redux\";\n\nimport ContactsList from \"../../modules/ContactsList/ContactsList\";\nimport FormNewContact from \"../../modules/FormNewContact/FormNewContact\";\nimport SearchContact from \"../../modules/SearchContact/SearchContact\";\n\n// import \"./index.css\";\n\nconst ContactsPage = () => {\n    const [filter, setFilter] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const contactsStore = useSelector(getContacts);\n    const { items, error, loading } = contactsStore;\n    const filteredItems = () => {\n        if (!filter) {\n            return items;\n        }\n        const newItems = items.filter((e) => {\n            const { name } = e;\n            return name.toLowerCase().includes(filter.toLowerCase());\n        });\n        return newItems;\n    };\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const onAddPhone = useCallback(\n        (obj) => dispatch(addContact(obj)),\n        [dispatch]\n    );\n    const onRemovePhone = useCallback(\n        (id) => {\n            dispatch(removeContact(id));\n        },\n        [dispatch]\n    );\n\n    const changeFilterState = useCallback(\n        ({ target: { value } }) => setFilter(value.trim()),\n        [setFilter]\n    );\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Phonebook</h1>\n            <FormNewContact onSubmit={onAddPhone} />\n\n            <h2 className=\"title\">Contacts</h2>\n            <SearchContact onChange={changeFilterState} />\n            {loading && <p>Loading...</p>}\n            {error && <p>{`Error: ${error}`}</p>}\n            {items.length > 0 && !error && !loading && (\n                <ContactsList items={filteredItems()} onClick={onRemovePhone} />\n            )}\n        </div>\n    );\n};\n\nexport default ContactsPage;\n\n"],"names":["getContacts","store","contacts","ContactsItem","id","name","phone","onClick","type","memo","ContactsList","items","elements","map","el","defaultProps","FormNewContact","onSubmit","initialState","useState","state","setState","handleChange","target","value","prevState","number","e","preventDefault","pattern","title","required","onChange","SearchContact","placeholder","filter","setFilter","dispatch","useDispatch","contactsStore","useSelector","error","loading","useEffect","fetchContacts","onAddPhone","useCallback","obj","addContact","onRemovePhone","removeContact","changeFilterState","trim","className","length","toLowerCase","includes"],"sourceRoot":""}